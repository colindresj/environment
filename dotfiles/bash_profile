# Hola Bash!

export PATH="/usr/local/bin:/usr/local/sbin:~/bin:$PATH"

# ---------------------
# General Aliases
# ---------------------
alias ll="ls -fa"
alias rm="rm -i"
alias b="cd .."
alias b4="cd ../../../../"
alias b5="cd ../../../../.."
alias be="bundle exec"
alias bash_profile="subl ~/.bash_profile"
alias reload="source ~/.bash_profile"
alias projects="cd ~/Projects"

# Show/Hide files
alias show_hidden_files="defaults write com.apple.finder AppleShowAllFiles TRUE && killall Finder"
alias hide_hidden_files="defaults write com.apple.finder AppleShowAllFiles FALSE && killall Finder"

# ---------------------
# Sublime
# ---------------------
# set as the default editor
export EDITOR="subl -w"
alias sublime_packages="open ~/Library/Application\ Support/Sublime\ Text\ 2/Packages/"

# ---------------------
# Postgres
# ---------------------
# Make sure we're pointing to the Postgres App's psql
PATH="/Applications/Postgres.app/Contents/MacOS/bin:$PATH"
export PG_USERNAME="JC"

# ---------------------
# MySQL
# ---------------------
alias mysql_start="mysql.server start"
alias mysql_stop="mysql.server stop"
export MYSQL_USERNAME="root"
export MYSQL_PASS="loginmysql"

# ---------------------
# Rbenv
# ---------------------
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# ---------------------
# Tab Improvements
# ---------------------
bind "set completion-ignore-case on"
bind "set show-all-if-ambiguous on"
bind "TAB: menu-complete"

# ---------------------
# Titleize Tabs
# ---------------------
title() {
  TITLE=$*;
  export PROMPT_COMMAND='echo -ne "\033]0;$TITLE\007"'
}

# ---------------------
# Bash History
# ---------------------
# Larger bash history (allow 32Â³ entries; default is 500)
export HISTSIZE=32768
export HISTFILESIZE=$HISTSIZE
# don't put duplicate lines in the history.
export HISTCONTROL=ignoredups
# ignore same sucessive entries.
export HISTCONTROL=ignoreboth

# ---------------------
# Colors
# ---------------------
# Adds colors to LS
export CLICOLOR=1
# http://geoff.greer.fm/lscolors/
export LSCOLORS=bxexcxdxbxegedabagacad
# prompt colors
BLACK="\[\e[0;30m\]"
RED="\033[1;31m"
ORANGE="\033[1;33m"
GREEN="\033[1;32m"
PURPLE="\033[1;35m"
WHITE="\033[1;37m"
YELLOW="\[\e[0;33m\]"
CYAN="\[\e[0;36m\]"
BLUE="\[\e[0;34m\]"
BOLD=""
RESET="\033[m"

# -----------------
# Git status in the prompt
# -----------------
# Long git to show + ? !
is_git_repo() {
  $(git rev-parse --is-inside-work-tree &> /dev/null)
}
is_git_dir() {
  $(git rev-parse --is-inside-git-dir 2> /dev/null)
}
get_git_branch() {
  local branch_name
  # Get the short symbolic ref
  branch_name=$(git symbolic-ref --quiet --short HEAD 2> /dev/null) ||
  # If HEAD isn't a symbolic ref, get the short SHA
  branch_name=$(git rev-parse --short HEAD 2> /dev/null) ||
  # Otherwise, just give up
  branch_name="(unknown)"
  printf $branch_name
}

# ---------------------
# Git status information
# ---------------------
prompt_git() {
  local git_info git_state uc us ut st
  if ! is_git_repo || is_git_dir; then
    return 1
  fi
  git_info=$(get_git_branch)
  # Check for uncommitted changes in the index
  if ! $(git diff --quiet --ignore-submodules --cached); then
    uc="+"
  fi
  # Check for unstaged changes
  if ! $(git diff-files --quiet --ignore-submodules --); then
    us="!"
  fi
  # Check for untracked files
  if [ -n "$(git ls-files --others --exclude-standard)" ]; then
    ut="${RED}?"
  fi
  # Check for stashed files
  if $(git rev-parse --verify refs/stash &>/dev/null); then
    st="$"
  fi
  git_state=$uc$us$ut$st
  # Combine the branch name and state information
  if [[ $git_state ]]; then
    git_info="$git_info${RESET}[$git_state${RESET}]"
  fi
  printf "${WHITE} on ${style_branch}${git_info}"
}

# ---------------------
# Build and style the prompt for git
# ---------------------
style_user="\[${RESET}${WHITE}\]"
style_path="\[${RESET}${CYAN}\]"
style_chars="\[${RESET}${WHITE}\]"
style_branch="${RED}"

PS1="${style_user}\u"                    # Username
PS1+="${style_path} \w"                  # Working directory
PS1+="\$(prompt_git)"                    # Git details
PS1+="\n"                                # Newline
PS1+="${style_chars}\$ \[${RESET}\]"     # $ (and reset color)

#----------------------
# Rails
# ---------------------
alias rails_open="open http://localhost:3000"

# Rails composer (pass the project name into the argument)
rails_composer() {
  rails new "$@" -m https://raw.github.com/RailsApps/rails-composer/master/composer.rb;
}

#----------------------
# Nodejs
# ---------------------
export NODE_PATH="/usr/local/bin/node"
export PATH="/usr/local/share/npm/bin:$PATH"
alias gulp_init="npm install --save-dev gulp gulp-util && npm init"

# ---------------------
# NGrok
# ---------------------
alias ngrok="./ngrok"
